variables:
  CI: 'true'
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  # Container scanning properties
  CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE/server
  CI_APPLICATION_TAG: $CI_COMMIT_SHA
  # Static Application Security Testing properties
  SAST_JAVA_VERSION: 21
  SAST_EXCLUDED_PATHS: target, */target, */src/test, website, docs
  SAST_DEFAULT_ANALYZERS: "spotbugs, kubesec"
  SAST_EXCLUDED_ANALYZERS: "eslint, nodejs-scan"
  # Dependency scan properties
  DS_DEFAULT_ANALYZERS: gemnasium-maven
  # Container scanning properties
  CS_ANALYZER_IMAGE: registry.gitlab.com/security-products/container-scanning:5
  CS_DISABLE_DEPENDENCY_LIST: 'true'
  CS_SEVERITY_THRESHOLD: "CRITICAL"

include:
  - template: Jobs/Secret-Detection.gitlab-ci.yml
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml
  - template: Jobs/SAST.gitlab-ci.yml
  - template: Jobs/Code-Quality.gitlab-ci.yml

secret_detection:
  stage: build
  variables:
    SECRET_DETECTION_HISTORIC_SCAN: "false"

spotbugs-sast:
  stage: build
  variables:
    ASDF_JAVA_VERSION: adoptopenjdk-21.0.2+13.0.LTS #https://github.com/halcyon/asdf-java/blob/master/data/jdk-linux-x86_64.tsv
    JAVA_PATH: /opt/asdf/shims/java
  before_script:
      - /bin/bash -c "source $HOME/.bashrc && asdf install java $ASDF_JAVA_VERSION && asdf global java $ASDF_JAVA_VERSION"

code_quality:
  stage: build
  artifacts:
    paths:
      - gl-code-quality-report.json
  rules:
    - if: $CODE_QUALITY_DISABLED
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" # Run code quality job in merge request pipelines
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH      # Run code quality job in pipelines on the default branch (but not in other branch pipelines)
    - if: $CI_COMMIT_TAG                               # Run code quality job in pipelines for tags

# To have the container scanning execute in the desired stage, the below is copied
# directly from https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Security/Container-Scanning.gitlab-ci.yml
container_scanning:
  stage: scan
  image: "$CS_ANALYZER_IMAGE$CS_IMAGE_SUFFIX"
  variables:
    # To provide a `vulnerability-allowlist.yml` file, override the GIT_STRATEGY variable in your
    # `.gitlab-ci.yml` file and set it to `fetch`.
    # For details, see the following links:
    # https://docs.gitlab.com/ee/user/application_security/container_scanning/index.html#overriding-the-container-scanning-template
    # https://docs.gitlab.com/ee/user/application_security/container_scanning/#vulnerability-allowlisting
    GIT_STRATEGY: none
  allow_failure: true
  artifacts:
    reports:
      container_scanning: gl-container-scanning-report.json
      # dependency_scanning: gl-dependency-scanning-report.json
    paths: [
      gl-container-scanning-report.json
      # gl-dependency-scanning-report.json
    ]
  dependencies: []
  script:
    - gtcs scan
  rules:
    - if: $CONTAINER_SCANNING_DISABLED
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_COMMIT_BRANCH &&
        $CI_GITLAB_FIPS_MODE == "true" &&
        $CS_ANALYZER_IMAGE !~ /-(fips|ubi)\z/
      variables:
        CS_IMAGE_SUFFIX: -fips
    - if: $CI_COMMIT_BRANCH

